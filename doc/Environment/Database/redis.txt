1. installation
	sudo apt-get install redis-server
	4 executable files: redis-server、redis-cli、redis-benchmark、redis-stat
		redis-server：Redis服务器的daemon启动程序
		redis-cli：Redis命令行操作工具。当然，你也可以用telnet根据其纯文本协议来操作
		redis-benchmark：Redis性能测试工具，测试Redis在你的系统及你的配置下的读写性能
		redis-stat：Redis状态检测工具，可以检测Redis当前状态参数及延迟状况 
2. configuration
	file: /etc/sysctl.conf
		params:
			overcommit_memory: 指定了内核针对内存分配的策略，其值可以是0、1、2。
				0: 表示内核将检查是否有足够的可用内存供应用进程使用；如果有足够的可用内存，内存申请允许；否则，内存申请失败，并把错误返回给应用进程。
				1: 表示内核允许分配所有的物理内存，而不管当前的内存状态如何。
				2: 表示内核允许分配超过所有物理内存和交换空间总和的内存
		设置方法: vm.overcommit_memory=1
		sysctl vm.overcommit_memory=1 
	file: redis.conf（/etc/redis.conf）
		params:
			daemonize：是否以后台daemon方式运行
			pidfile：pid文件位置
			port：监听的端口号
			timeout：请求超时时间
			loglevel：log信息级别
			logfile：log文件位置
			databases：开启数据库的数量
			save * *：保存快照的频率，第一个*表示多长时间，第三个*表示执行多少次写操作。在一定时间内执行一定数量的写操作时，自动保存快照。可设置多个条件。
			rdbcompression：是否使用压缩
			dbfilename：数据快照文件名（只是文件名，不包括目录）
			dir：数据快照的保存目录（这个是目录）
			appendonly：是否开启appendonlylog，开启的话每次写操作会记一条log，这会提高数据抗风险能力，但影响效率。
			appendfsync：appendonlylog如何同步到磁盘（三个选项，分别是每次写都强制调用fsync、每秒启用一次fsync、不调用fsync等待系统自己同步）
		config example:
			daemonize yes #转为守护进程，否则启动时会每隔5秒输出一行监控信息
			pidfile /usr/local/redis/var/redis.pid
			port 6379
			timeout 300
			loglevel debug
			logfile /usr/local/redis/var/redis.log
			databases 16
			save 900 1
			save 300 10
			save 60 10000 #改变次数，其实这个可以根据情况进行指定
			maxmemory 256000000 #分配256M内存
			rdbcompression yes
			dbfilename dump.rdb
			dir /usr/local/redis/var/
			appendonly no
			appendfsync always
			glueoutputbuf yes
			shareobjects no
			shareobjectspoolsize 1024
3. start and shutdown
	start running background: $ redis-server /.../redis.conf
	shutdown:
		$ redis-cli shutdown
		$ redis-cli -p 6380 shutdown	(for specific port)
4. check if well-running
	1. by telnet
		command: $ telnet [ip] [port]
		example: $ telnet 127.0.0.1 6379
	2. by ps
		command: $ ps -ef | grep redis  
	3. by redis-cli
		command: $ redis-cli ping
		if PONG, work well.
5. set and get values
	commands: 
		$redis-cli set [mykey] [somevalue]
		$redis-cli get [mykey]